{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\abhis\\\\Desktop\\\\quiz-app\\\\final\\\\src\\\\App.js\";\nimport React, { useState } from 'react';\n\nfunction CreateQuiz(props) {\n  const [ques, setQuestion] = useState('');\n  const [option1, updateOption1] = useState('');\n  const [option2, updateOption2] = useState('');\n  const [option3, updateOption3] = useState('');\n  const [option4, updateOption4] = useState('');\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    props.setShowQuestions(prev => true);\n  }\n\n  function addQuestion(e) {\n    e.preventDefault();\n    props.updateQuestions(prev => prev.concat({\n      questionText: ques,\n      answerOptions: [{\n        answerText: option1,\n        isCorrect: false\n      }, {\n        answerText: option2,\n        isCorrect: false\n      }, {\n        answerText: option3,\n        isCorrect: true\n      }, {\n        answerText: option4,\n        isCorrect: false\n      }]\n    }));\n    setQuestion('');\n    updateOption1('');\n    updateOption2('');\n    updateOption3('');\n    updateOption4('');\n  }\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"fieldset\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    value: ques,\n    onChange: e => setQuestion(e.target.value),\n    placeholder: \"Question\",\n    className: \"question-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    value: option1,\n    onChange: e => updateOption1(e.target.value),\n    placeholder: \"Option 1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    value: option2,\n    onChange: e => updateOption2(e.target.value),\n    placeholder: \"Option 2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    value: option3,\n    onChange: e => updateOption3(e.target.value),\n    placeholder: \"Option 3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    value: option4,\n    onChange: e => updateOption4(e.target.value),\n    placeholder: \"Option 4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: addQuestion,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, \" Add Question \"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, \" Done \")));\n}\n\nexport default function App() {\n  // const questions = [\n  // \t{\n  // \t\tquestionText: 'What is the capital of France?',\n  // \t\tanswerOptions: [\n  // \t\t\t{ answerText: 'New York', isCorrect: false },\n  // \t\t\t{ answerText: 'London', isCorrect: false },\n  // \t\t\t{ answerText: 'Paris', isCorrect: true },\n  // \t\t\t{ answerText: 'Dublin', isCorrect: false },\n  // \t\t],\n  // \t},\n  // \t{\n  // \t\tquestionText: 'Who is CEO of Tesla?',\n  // \t\tanswerOptions: [\n  // \t\t\t{ answerText: 'Jeff Bezos', isCorrect: false },\n  // \t\t\t{ answerText: 'Elon Musk', isCorrect: true },\n  // \t\t\t{ answerText: 'Bill Gates', isCorrect: false },\n  // \t\t\t{ answerText: 'Tony Stark', isCorrect: false },\n  // \t\t],\n  // \t},\n  // \t{\n  // \t\tquestionText: 'The iPhone was created by which company?',\n  // \t\tanswerOptions: [\n  // \t\t\t{ answerText: 'Apple', isCorrect: true },\n  // \t\t\t{ answerText: 'Intel', isCorrect: false },\n  // \t\t\t{ answerText: 'Amazon', isCorrect: false },\n  // \t\t\t{ answerText: 'Microsoft', isCorrect: false },\n  // \t\t],\n  // \t},\n  // \t{\n  // \t\tquestionText: 'How many Harry Potter books are there?',\n  // \t\tanswerOptions: [\n  // \t\t\t{ answerText: '1', isCorrect: false },\n  // \t\t\t{ answerText: '4', isCorrect: false },\n  // \t\t\t{ answerText: '6', isCorrect: false },\n  // \t\t\t{ answerText: '7', isCorrect: true },\n  // \t\t],\n  // \t},\n  // ];\n  const [questions, updateQuestions] = useState([]);\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [showScore, setShowScore] = useState(false);\n  const [showQuestions, setShowQuestions] = useState(false);\n  const [score, setScore] = useState(0);\n\n  const handleAnswerOptionClick = isCorrect => {\n    if (isCorrect) {\n      setScore(score + 1);\n    }\n\n    const nextQuestion = currentQuestion + 1;\n\n    if (nextQuestion < questions.length) {\n      setCurrentQuestion(nextQuestion);\n    } else {\n      setShowScore(true);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 3\n    }\n  }, showScore ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"score-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 5\n    }\n  }, \"You scored \", score, \" out of \", questions.length) : showQuestions ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"question-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"question-count\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }\n  }, \"Question \", currentQuestion + 1), \"/\", questions.length), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"question-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 8\n    }\n  }, questions[currentQuestion].questionText)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"answer-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }\n  }, questions[currentQuestion].answerOptions.map(answerOption => /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => handleAnswerOptionClick(answerOption.isCorrect),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }\n  }, answerOption.answerText)))) : /*#__PURE__*/React.createElement(CreateQuiz, {\n    updateQuestions: updateQuestions,\n    setShowQuestions: setShowQuestions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 6\n    }\n  }));\n}","map":{"version":3,"sources":["C:/Users/abhis/Desktop/quiz-app/final/src/App.js"],"names":["React","useState","CreateQuiz","props","ques","setQuestion","option1","updateOption1","option2","updateOption2","option3","updateOption3","option4","updateOption4","handleSubmit","e","preventDefault","setShowQuestions","prev","addQuestion","updateQuestions","concat","questionText","answerOptions","answerText","isCorrect","target","value","App","questions","currentQuestion","setCurrentQuestion","showScore","setShowScore","showQuestions","score","setScore","handleAnswerOptionClick","nextQuestion","length","map","answerOption"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\n\r\n\r\nfunction CreateQuiz(props) {\r\n\tconst [ques, setQuestion] = useState('')\r\n\tconst [option1, updateOption1] = useState('')\r\n\tconst [option2, updateOption2] = useState('')\r\n\tconst [option3, updateOption3] = useState('')\r\n\tconst [option4, updateOption4] = useState('')\r\n\tfunction handleSubmit(e) {\r\n\t\te.preventDefault()\r\n\t\tprops.setShowQuestions(prev => true)\r\n\t}\r\n\r\n\tfunction addQuestion(e) {\r\n\t\te.preventDefault()\r\n\t\tprops.updateQuestions(prev => prev.concat({\r\n\t\t\tquestionText: ques,\r\n\t\t\tanswerOptions: [\r\n\t\t\t\t{ answerText: option1, isCorrect: false },\r\n\t\t\t\t{ answerText: option2, isCorrect: false },\r\n\t\t\t\t{ answerText: option3, isCorrect: true },\r\n\t\t\t\t{ answerText: option4, isCorrect: false },\r\n\t\t\t],\r\n\t\t}))\r\n\t\tsetQuestion('')\r\n\t\tupdateOption1('')\r\n\t\tupdateOption2('')\r\n\t\tupdateOption3('')\r\n\t\tupdateOption4('')\r\n\t}\r\n\treturn (\r\n\t\t<form>\r\n\t\t\t<fieldset>\r\n\t\t\t\t<input value={ques} onChange={e => setQuestion(e.target.value)} placeholder=\"Question\" className='question-input' />\r\n\t\t\t\t<input value={option1} onChange={e => updateOption1(e.target.value)} placeholder=\"Option 1\" />\r\n\t\t\t\t<input value={option2} onChange={e => updateOption2(e.target.value)} placeholder=\"Option 2\" />\r\n\t\t\t\t<input value={option3} onChange={e => updateOption3(e.target.value)} placeholder=\"Option 3\" />\r\n\t\t\t\t<input value={option4} onChange={e => updateOption4(e.target.value)} placeholder=\"Option 4\" />\r\n\t\t\t\t<button onClick={addQuestion}> Add Question </button>\r\n\t\t\t\t<button onClick={handleSubmit}> Done </button>\r\n\t\t\t</fieldset>\r\n\t\t</form>\r\n\t)\r\n\r\n}\r\nexport default function App() {\r\n\t// const questions = [\r\n\t// \t{\r\n\t// \t\tquestionText: 'What is the capital of France?',\r\n\t// \t\tanswerOptions: [\r\n\t// \t\t\t{ answerText: 'New York', isCorrect: false },\r\n\t// \t\t\t{ answerText: 'London', isCorrect: false },\r\n\t// \t\t\t{ answerText: 'Paris', isCorrect: true },\r\n\t// \t\t\t{ answerText: 'Dublin', isCorrect: false },\r\n\t// \t\t],\r\n\t// \t},\r\n\t// \t{\r\n\t// \t\tquestionText: 'Who is CEO of Tesla?',\r\n\t// \t\tanswerOptions: [\r\n\t// \t\t\t{ answerText: 'Jeff Bezos', isCorrect: false },\r\n\t// \t\t\t{ answerText: 'Elon Musk', isCorrect: true },\r\n\t// \t\t\t{ answerText: 'Bill Gates', isCorrect: false },\r\n\t// \t\t\t{ answerText: 'Tony Stark', isCorrect: false },\r\n\t// \t\t],\r\n\t// \t},\r\n\t// \t{\r\n\t// \t\tquestionText: 'The iPhone was created by which company?',\r\n\t// \t\tanswerOptions: [\r\n\t// \t\t\t{ answerText: 'Apple', isCorrect: true },\r\n\t// \t\t\t{ answerText: 'Intel', isCorrect: false },\r\n\t// \t\t\t{ answerText: 'Amazon', isCorrect: false },\r\n\t// \t\t\t{ answerText: 'Microsoft', isCorrect: false },\r\n\t// \t\t],\r\n\t// \t},\r\n\t// \t{\r\n\t// \t\tquestionText: 'How many Harry Potter books are there?',\r\n\t// \t\tanswerOptions: [\r\n\t// \t\t\t{ answerText: '1', isCorrect: false },\r\n\t// \t\t\t{ answerText: '4', isCorrect: false },\r\n\t// \t\t\t{ answerText: '6', isCorrect: false },\r\n\t// \t\t\t{ answerText: '7', isCorrect: true },\r\n\t// \t\t],\r\n\t// \t},\r\n\t// ];\r\n\r\n\tconst [questions, updateQuestions] = useState([]);\r\n\tconst [currentQuestion, setCurrentQuestion] = useState(0);\r\n\tconst [showScore, setShowScore] = useState(false);\r\n\tconst [showQuestions, setShowQuestions] = useState(false);\r\n\tconst [score, setScore] = useState(0);\r\n\r\n\tconst handleAnswerOptionClick = (isCorrect) => {\r\n\t\tif (isCorrect) {\r\n\t\t\tsetScore(score + 1);\r\n\t\t}\r\n\r\n\t\tconst nextQuestion = currentQuestion + 1;\r\n\t\tif (nextQuestion < questions.length) {\r\n\t\t\tsetCurrentQuestion(nextQuestion);\r\n\t\t} else {\r\n\t\t\tsetShowScore(true);\r\n\t\t}\r\n\t};\r\n\treturn (\r\n\t\t<div className='app'>\r\n\t\t\t{showScore ? (\r\n\t\t\t\t<div className='score-section'>\r\n\t\t\t\t\tYou scored {score} out of {questions.length}\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\tshowQuestions ? (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<div className='question-section'>\r\n\t\t\t\t\t\t\t<div className='question-count'>\r\n\t\t\t\t\t\t\t\t<span>Question {currentQuestion + 1}</span>/{questions.length}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className='question-text'>{questions[currentQuestion].questionText}</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='answer-section'>\r\n\t\t\t\t\t\t\t{questions[currentQuestion].answerOptions.map((answerOption) => (\r\n\t\t\t\t\t\t\t\t<button onClick={() => handleAnswerOptionClick(answerOption.isCorrect)}>{answerOption.answerText}</button>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<CreateQuiz updateQuestions={updateQuestions} setShowQuestions={setShowQuestions} />\r\n\t\t\t\t)\r\n\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}