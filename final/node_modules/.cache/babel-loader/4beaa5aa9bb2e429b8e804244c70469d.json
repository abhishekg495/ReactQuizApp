{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\abhis\\\\Desktop\\\\quiz-app\\\\final\\\\src\\\\App.js\";\nimport React, { useState } from 'react';\n\nfunction CreateQuiz(props) {\n  const [ques, setQuestion] = useState('ABC');\n  const [option1, updateOption1] = useState('Option1');\n  const [option2, updateOption2] = useState('Option2');\n  const [option3, updateOption3] = useState('Option2');\n  const [option4, updateOption4] = useState('Option3');\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    props.updateQuestions(prev => prev.concat({\n      questionText: ques,\n      answerOptions: [{\n        answerText: {\n          option1\n        },\n        isCorrect: false\n      }, {\n        answerText: {\n          option2\n        },\n        isCorrect: false\n      }, {\n        answerText: {\n          option3\n        },\n        isCorrect: true\n      }, {\n        answerText: {\n          option4\n        },\n        isCorrect: false\n      }]\n    }));\n    props.setShowQuestions(prev => true);\n  }\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"fieldset\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    onChange: e => setQuestion(e.target.value),\n    placeholder: \"Question\",\n    className: \"question-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    onChange: e => updateOption1(e.target.value),\n    placeholder: \"Option 1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    onChange: e => updateOption2(e.target.value),\n    placeholder: \"Option 2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    onChange: e => updateOption3(e.target.value),\n    placeholder: \"Option 3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    onChange: e => updateOption4(e.target.value),\n    placeholder: \"Option 4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, \" Add Question \")));\n}\n\nexport default function App() {\n  // const questions = [\n  // \t{\n  // \t\tquestionText: 'What is the capital of France?',\n  // \t\tanswerOptions: [\n  // \t\t\t{ answerText: 'New York', isCorrect: false },\n  // \t\t\t{ answerText: 'London', isCorrect: false },\n  // \t\t\t{ answerText: 'Paris', isCorrect: true },\n  // \t\t\t{ answerText: 'Dublin', isCorrect: false },\n  // \t\t],\n  // \t},\n  // \t{\n  // \t\tquestionText: 'Who is CEO of Tesla?',\n  // \t\tanswerOptions: [\n  // \t\t\t{ answerText: 'Jeff Bezos', isCorrect: false },\n  // \t\t\t{ answerText: 'Elon Musk', isCorrect: true },\n  // \t\t\t{ answerText: 'Bill Gates', isCorrect: false },\n  // \t\t\t{ answerText: 'Tony Stark', isCorrect: false },\n  // \t\t],\n  // \t},\n  // \t{\n  // \t\tquestionText: 'The iPhone was created by which company?',\n  // \t\tanswerOptions: [\n  // \t\t\t{ answerText: 'Apple', isCorrect: true },\n  // \t\t\t{ answerText: 'Intel', isCorrect: false },\n  // \t\t\t{ answerText: 'Amazon', isCorrect: false },\n  // \t\t\t{ answerText: 'Microsoft', isCorrect: false },\n  // \t\t],\n  // \t},\n  // \t{\n  // \t\tquestionText: 'How many Harry Potter books are there?',\n  // \t\tanswerOptions: [\n  // \t\t\t{ answerText: '1', isCorrect: false },\n  // \t\t\t{ answerText: '4', isCorrect: false },\n  // \t\t\t{ answerText: '6', isCorrect: false },\n  // \t\t\t{ answerText: '7', isCorrect: true },\n  // \t\t],\n  // \t},\n  // ];\n  const [questions, updateQuestions] = useState([]);\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [showScore, setShowScore] = useState(false);\n  const [showQuestions, setShowQuestions] = useState(false);\n  const [score, setScore] = useState(0);\n\n  const handleAnswerOptionClick = isCorrect => {\n    if (isCorrect) {\n      setScore(score + 1);\n    }\n\n    const nextQuestion = currentQuestion + 1;\n\n    if (nextQuestion < questions.length) {\n      setCurrentQuestion(nextQuestion);\n    } else {\n      setShowScore(true);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 3\n    }\n  }, showScore ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"score-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 5\n    }\n  }, \"You scored \", score, \" out of \", questions.length) : showQuestions ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"question-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"question-count\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }\n  }, \"Question \", currentQuestion + 1), \"/\", questions.length), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"question-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 8\n    }\n  }, questions[currentQuestion].questionText)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"answer-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }\n  }, questions[currentQuestion].answerOptions.map(answerOption => /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => handleAnswerOptionClick(answerOption.isCorrect),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }\n  }, answerOption.answerText)))) : /*#__PURE__*/React.createElement(CreateQuiz, {\n    updateQuestions: updateQuestions,\n    setShowQuestions: setShowQuestions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 6\n    }\n  }));\n}","map":{"version":3,"sources":["C:/Users/abhis/Desktop/quiz-app/final/src/App.js"],"names":["React","useState","CreateQuiz","props","ques","setQuestion","option1","updateOption1","option2","updateOption2","option3","updateOption3","option4","updateOption4","handleSubmit","e","preventDefault","updateQuestions","prev","concat","questionText","answerOptions","answerText","isCorrect","setShowQuestions","target","value","App","questions","currentQuestion","setCurrentQuestion","showScore","setShowScore","showQuestions","score","setScore","handleAnswerOptionClick","nextQuestion","length","map","answerOption"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\n\r\n\r\nfunction CreateQuiz(props) {\r\n\tconst [ques, setQuestion] = useState('ABC')\r\n\tconst [option1, updateOption1] = useState('Option1')\r\n\tconst [option2, updateOption2] = useState('Option2')\r\n\tconst [option3, updateOption3] = useState('Option2')\r\n\tconst [option4, updateOption4] = useState('Option3')\r\n\tfunction handleSubmit(e) {\r\n\t\te.preventDefault()\r\n\t\tprops.updateQuestions(prev => prev.concat({\r\n\t\t\tquestionText: ques,\r\n\t\t\tanswerOptions: [\r\n\t\t\t\t{ answerText: { option1 }, isCorrect: false },\r\n\t\t\t\t{ answerText: { option2 }, isCorrect: false },\r\n\t\t\t\t{ answerText: { option3 }, isCorrect: true },\r\n\t\t\t\t{ answerText: { option4 }, isCorrect: false },\r\n\t\t\t],\r\n\t\t}))\r\n\t\tprops.setShowQuestions(prev => true)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<form onSubmit={handleSubmit}>\r\n\t\t\t<fieldset>\r\n\t\t\t\t<input onChange={e => setQuestion(e.target.value)} placeholder=\"Question\" className='question-input' />\r\n\t\t\t\t<input onChange={e => updateOption1(e.target.value)} placeholder=\"Option 1\" />\r\n\t\t\t\t<input onChange={e => updateOption2(e.target.value)} placeholder=\"Option 2\" />\r\n\t\t\t\t<input onChange={e => updateOption3(e.target.value)} placeholder=\"Option 3\" />\r\n\t\t\t\t<input onChange={e => updateOption4(e.target.value)} placeholder=\"Option 4\" />\r\n\t\t\t\t<button> Add Question </button>\r\n\t\t\t</fieldset>\r\n\t\t</form>\r\n\t)\r\n\r\n}\r\nexport default function App() {\r\n\t// const questions = [\r\n\t// \t{\r\n\t// \t\tquestionText: 'What is the capital of France?',\r\n\t// \t\tanswerOptions: [\r\n\t// \t\t\t{ answerText: 'New York', isCorrect: false },\r\n\t// \t\t\t{ answerText: 'London', isCorrect: false },\r\n\t// \t\t\t{ answerText: 'Paris', isCorrect: true },\r\n\t// \t\t\t{ answerText: 'Dublin', isCorrect: false },\r\n\t// \t\t],\r\n\t// \t},\r\n\t// \t{\r\n\t// \t\tquestionText: 'Who is CEO of Tesla?',\r\n\t// \t\tanswerOptions: [\r\n\t// \t\t\t{ answerText: 'Jeff Bezos', isCorrect: false },\r\n\t// \t\t\t{ answerText: 'Elon Musk', isCorrect: true },\r\n\t// \t\t\t{ answerText: 'Bill Gates', isCorrect: false },\r\n\t// \t\t\t{ answerText: 'Tony Stark', isCorrect: false },\r\n\t// \t\t],\r\n\t// \t},\r\n\t// \t{\r\n\t// \t\tquestionText: 'The iPhone was created by which company?',\r\n\t// \t\tanswerOptions: [\r\n\t// \t\t\t{ answerText: 'Apple', isCorrect: true },\r\n\t// \t\t\t{ answerText: 'Intel', isCorrect: false },\r\n\t// \t\t\t{ answerText: 'Amazon', isCorrect: false },\r\n\t// \t\t\t{ answerText: 'Microsoft', isCorrect: false },\r\n\t// \t\t],\r\n\t// \t},\r\n\t// \t{\r\n\t// \t\tquestionText: 'How many Harry Potter books are there?',\r\n\t// \t\tanswerOptions: [\r\n\t// \t\t\t{ answerText: '1', isCorrect: false },\r\n\t// \t\t\t{ answerText: '4', isCorrect: false },\r\n\t// \t\t\t{ answerText: '6', isCorrect: false },\r\n\t// \t\t\t{ answerText: '7', isCorrect: true },\r\n\t// \t\t],\r\n\t// \t},\r\n\t// ];\r\n\r\n\tconst [questions, updateQuestions] = useState([]);\r\n\tconst [currentQuestion, setCurrentQuestion] = useState(0);\r\n\tconst [showScore, setShowScore] = useState(false);\r\n\tconst [showQuestions, setShowQuestions] = useState(false);\r\n\tconst [score, setScore] = useState(0);\r\n\r\n\tconst handleAnswerOptionClick = (isCorrect) => {\r\n\t\tif (isCorrect) {\r\n\t\t\tsetScore(score + 1);\r\n\t\t}\r\n\r\n\t\tconst nextQuestion = currentQuestion + 1;\r\n\t\tif (nextQuestion < questions.length) {\r\n\t\t\tsetCurrentQuestion(nextQuestion);\r\n\t\t} else {\r\n\t\t\tsetShowScore(true);\r\n\t\t}\r\n\t};\r\n\treturn (\r\n\t\t<div className='app'>\r\n\t\t\t{showScore ? (\r\n\t\t\t\t<div className='score-section'>\r\n\t\t\t\t\tYou scored {score} out of {questions.length}\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\tshowQuestions ? (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<div className='question-section'>\r\n\t\t\t\t\t\t\t<div className='question-count'>\r\n\t\t\t\t\t\t\t\t<span>Question {currentQuestion + 1}</span>/{questions.length}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className='question-text'>{questions[currentQuestion].questionText}</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='answer-section'>\r\n\t\t\t\t\t\t\t{questions[currentQuestion].answerOptions.map((answerOption) => (\r\n\t\t\t\t\t\t\t\t<button onClick={() => handleAnswerOptionClick(answerOption.isCorrect)}>{answerOption.answerText}</button>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<CreateQuiz updateQuestions={updateQuestions} setShowQuestions={setShowQuestions} />\r\n\t\t\t\t)\r\n\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}