{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\abhis\\\\Desktop\\\\quiz-app\\\\final\\\\src\\\\App.js\";\nimport React, { useState } from 'react';\n\nfunction CreateQuiz(props) {\n  const questionsList = props.questions.map((ques, i) => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"question\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 4\n    }\n  }, i + 1 + \":\", \" \", ques.questionText), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"remove-question\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 4\n    }\n  }, \"X\")));\n  const [ques, setQuestion] = useState('');\n  const [option1, updateOption1] = useState('');\n  const [option1Correct, updateOption1Correct] = useState('');\n  const [option2, updateOption2] = useState('');\n  const [option2Correct, updateOption2Correct] = useState('');\n  const [option3, updateOption3] = useState('');\n  const [option3Correct, updateOption3Correct] = useState('');\n  const [option4, updateOption4] = useState('');\n  const [option4Correct, updateOption4Correct] = useState('');\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    props.setShowQuestions(prev => true);\n  }\n\n  function addQuestion(e) {\n    e.preventDefault();\n    props.updateQuestions(prev => prev.concat({\n      questionText: ques,\n      answerOptions: [{\n        answerText: option1,\n        isCorrect: option1Correct == 'Yes'\n      }, {\n        answerText: option2,\n        isCorrect: option2Correct == 'Yes'\n      }, {\n        answerText: option3,\n        isCorrect: option3Correct == 'Yes'\n      }, {\n        answerText: option4,\n        isCorrect: option4Correct == 'Yes'\n      }]\n    }));\n    setQuestion('');\n    updateOption1('');\n    updateOption1Correct('No');\n    updateOption2('');\n    updateOption2Correct('No');\n    updateOption3('');\n    updateOption3Correct('No');\n    updateOption4('');\n    updateOption4Correct('No');\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"create-questions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 3\n    }\n  }, questionsList, /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"fieldset\", {\n    className: \"question-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    value: ques,\n    onChange: e => setQuestion(e.target.value),\n    placeholder: \"Question\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 6\n    }\n  }), /*#__PURE__*/React.createElement(\"fieldset\", {\n    className: \"option-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    value: option1,\n    onChange: e => updateOption1(e.target.value),\n    placeholder: \"Option 1\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"select\", {\n    vale: option1Correct,\n    onChange: e => updateOption1Correct(e.target.value),\n    placeholder: \"Is this one of the answers ?\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 8\n    }\n  }, \"Yes\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 8\n    }\n  }, \"No\"))), /*#__PURE__*/React.createElement(\"fieldset\", {\n    className: \"option-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    value: option2,\n    onChange: e => updateOption2(e.target.value),\n    placeholder: \"Option 2\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"select\", {\n    vale: option2Correct,\n    onChange: e => updateOption2Correct(e.target.value),\n    placeholder: \"Is this one of the answers ?\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 8\n    }\n  }, \"Yes\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 8\n    }\n  }, \"No\"))), /*#__PURE__*/React.createElement(\"fieldset\", {\n    className: \"option-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    value: option3,\n    onChange: e => updateOption3(e.target.value),\n    placeholder: \"Option 3\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"select\", {\n    vale: option3Correct,\n    onChange: e => updateOption3Correct(e.target.value),\n    placeholder: \"Is this one of the answers ?\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 8\n    }\n  }, \"Yes\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 8\n    }\n  }, \"No\"))), /*#__PURE__*/React.createElement(\"fieldset\", {\n    className: \"option-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    value: option4,\n    onChange: e => updateOption4(e.target.value),\n    placeholder: \"Option 4\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"select\", {\n    vale: option4Correct,\n    onChange: e => updateOption4Correct(e.target.value),\n    placeholder: \"Is this one of the answers ?\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 8\n    }\n  }, \"Yes\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 8\n    }\n  }, \"No\"))), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: addQuestion,\n    className: \"question-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 6\n    }\n  }, \" Add Question \"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 6\n    }\n  }, \" Done \"))));\n}\n\nexport default function App() {\n  // const questions = [\n  // \t{\n  // \t\tquestionText: 'What is the capital of France?',\n  // \t\tanswerOptions: [\n  // \t\t\t{ answerText: 'New York', isCorrect: false },\n  // \t\t\t{ answerText: 'London', isCorrect: false },\n  // \t\t\t{ answerText: 'Paris', isCorrect: true },\n  // \t\t\t{ answerText: 'Dublin', isCorrect: false },\n  // \t\t],\n  // \t},\n  // \t{\n  // \t\tquestionText: 'Who is CEO of Tesla?',\n  // \t\tanswerOptions: [\n  // \t\t\t{ answerText: 'Jeff Bezos', isCorrect: false },\n  // \t\t\t{ answerText: 'Elon Musk', isCorrect: true },\n  // \t\t\t{ answerText: 'Bill Gates', isCorrect: false },\n  // \t\t\t{ answerText: 'Tony Stark', isCorrect: false },\n  // \t\t],\n  // \t},\n  // \t{\n  // \t\tquestionText: 'The iPhone was created by which company?',\n  // \t\tanswerOptions: [\n  // \t\t\t{ answerText: 'Apple', isCorrect: true },\n  // \t\t\t{ answerText: 'Intel', isCorrect: false },\n  // \t\t\t{ answerText: 'Amazon', isCorrect: false },\n  // \t\t\t{ answerText: 'Microsoft', isCorrect: false },\n  // \t\t],\n  // \t},\n  // \t{\n  // \t\tquestionText: 'How many Harry Potter books are there?',\n  // \t\tanswerOptions: [\n  // \t\t\t{ answerText: '1', isCorrect: false },\n  // \t\t\t{ answerText: '4', isCorrect: false },\n  // \t\t\t{ answerText: '6', isCorrect: false },\n  // \t\t\t{ answerText: '7', isCorrect: true },\n  // \t\t],\n  // \t},\n  // ];\n  const [questions, updateQuestions] = useState([]);\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [showScore, setShowScore] = useState(false);\n  const [showQuestions, setShowQuestions] = useState(false);\n  const [score, setScore] = useState(0);\n\n  const handleAnswerOptionClick = isCorrect => {\n    if (isCorrect) {\n      setScore(score + 1);\n    }\n\n    const nextQuestion = currentQuestion + 1;\n\n    if (nextQuestion < questions.length) {\n      setCurrentQuestion(nextQuestion);\n    } else {\n      setShowScore(true);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 3\n    }\n  }, showScore ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"score-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 5\n    }\n  }, \"You scored \", score, \" out of \", questions.length) : showQuestions ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"question-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"question-count\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 9\n    }\n  }, \"Question \", currentQuestion + 1), \"/\", questions.length), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"question-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 8\n    }\n  }, questions[currentQuestion].questionText)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"answer-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }\n  }, questions[currentQuestion].answerOptions.map(answerOption => /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => handleAnswerOptionClick(answerOption.isCorrect),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 9\n    }\n  }, answerOption.answerText)))) : /*#__PURE__*/React.createElement(CreateQuiz, {\n    updateQuestions: updateQuestions,\n    setShowQuestions: setShowQuestions,\n    questions: questions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 6\n    }\n  }));\n}","map":{"version":3,"sources":["C:/Users/abhis/Desktop/quiz-app/final/src/App.js"],"names":["React","useState","CreateQuiz","props","questionsList","questions","map","ques","i","questionText","setQuestion","option1","updateOption1","option1Correct","updateOption1Correct","option2","updateOption2","option2Correct","updateOption2Correct","option3","updateOption3","option3Correct","updateOption3Correct","option4","updateOption4","option4Correct","updateOption4Correct","handleSubmit","e","preventDefault","setShowQuestions","prev","addQuestion","updateQuestions","concat","answerOptions","answerText","isCorrect","target","value","App","currentQuestion","setCurrentQuestion","showScore","setShowScore","showQuestions","score","setScore","handleAnswerOptionClick","nextQuestion","length","answerOption"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\n\r\n\r\nfunction CreateQuiz(props) {\r\n\tconst questionsList = props.questions.map((ques, i) =>\r\n\t\t<div className='question'>\r\n\t\t\t<span>{i + 1 + \":\"} {ques.questionText}</span>\r\n\t\t\t<span className='remove-question'>X</span>\r\n\t\t</div>\r\n\t);\r\n\tconst [ques, setQuestion] = useState('')\r\n\tconst [option1, updateOption1] = useState('')\r\n\tconst [option1Correct, updateOption1Correct] = useState('')\r\n\tconst [option2, updateOption2] = useState('')\r\n\tconst [option2Correct, updateOption2Correct] = useState('')\r\n\tconst [option3, updateOption3] = useState('')\r\n\tconst [option3Correct, updateOption3Correct] = useState('')\r\n\tconst [option4, updateOption4] = useState('')\r\n\tconst [option4Correct, updateOption4Correct] = useState('')\r\n\tfunction handleSubmit(e) {\r\n\t\te.preventDefault()\r\n\t\tprops.setShowQuestions(prev => true)\r\n\t}\r\n\r\n\tfunction addQuestion(e) {\r\n\t\te.preventDefault()\r\n\t\tprops.updateQuestions(prev => prev.concat({\r\n\t\t\tquestionText: ques,\r\n\t\t\tanswerOptions: [\r\n\t\t\t\t{ answerText: option1, isCorrect: option1Correct == 'Yes' },\r\n\t\t\t\t{ answerText: option2, isCorrect: option2Correct == 'Yes' },\r\n\t\t\t\t{ answerText: option3, isCorrect: option3Correct == 'Yes' },\r\n\t\t\t\t{ answerText: option4, isCorrect: option4Correct == 'Yes' },\r\n\t\t\t],\r\n\t\t}))\r\n\t\tsetQuestion('')\r\n\t\tupdateOption1('')\r\n\t\tupdateOption1Correct('No')\r\n\t\tupdateOption2('')\r\n\t\tupdateOption2Correct('No')\r\n\t\tupdateOption3('')\r\n\t\tupdateOption3Correct('No')\r\n\t\tupdateOption4('')\r\n\t\tupdateOption4Correct('No')\r\n\t}\r\n\treturn (\r\n\t\t<div className='create-questions'>\r\n\t\t\t{questionsList}\r\n\t\t\t< form >\r\n\t\t\t\t<fieldset className='question-input'>\r\n\t\t\t\t\t<input value={ques} onChange={e => setQuestion(e.target.value)} placeholder=\"Question\" />\r\n\t\t\t\t\t<fieldset className='option-input'>\r\n\t\t\t\t\t\t<input value={option1} onChange={e => updateOption1(e.target.value)} placeholder=\"Option 1\" required />\r\n\t\t\t\t\t\t<select vale={option1Correct} onChange={e => updateOption1Correct(e.target.value)} placeholder='Is this one of the answers ?'>\r\n\t\t\t\t\t\t\t<option>Yes</option>\r\n\t\t\t\t\t\t\t<option>No</option>\r\n\t\t\t\t\t\t</select>\r\n\t\t\t\t\t</fieldset>\r\n\t\t\t\t\t<fieldset className='option-input'>\r\n\t\t\t\t\t\t<input value={option2} onChange={e => updateOption2(e.target.value)} placeholder=\"Option 2\" required />\r\n\t\t\t\t\t\t<select vale={option2Correct} onChange={e => updateOption2Correct(e.target.value)} placeholder='Is this one of the answers ?'>\r\n\t\t\t\t\t\t\t<option>Yes</option>\r\n\t\t\t\t\t\t\t<option>No</option>\r\n\t\t\t\t\t\t</select>\r\n\t\t\t\t\t</fieldset>\r\n\t\t\t\t\t<fieldset className='option-input'>\r\n\t\t\t\t\t\t<input value={option3} onChange={e => updateOption3(e.target.value)} placeholder=\"Option 3\" required />\r\n\t\t\t\t\t\t<select vale={option3Correct} onChange={e => updateOption3Correct(e.target.value)} placeholder='Is this one of the answers ?'>\r\n\t\t\t\t\t\t\t<option>Yes</option>\r\n\t\t\t\t\t\t\t<option>No</option>\r\n\t\t\t\t\t\t</select>\r\n\t\t\t\t\t</fieldset>\r\n\t\t\t\t\t<fieldset className='option-input'>\r\n\t\t\t\t\t\t<input value={option4} onChange={e => updateOption4(e.target.value)} placeholder=\"Option 4\" required />\r\n\t\t\t\t\t\t<select vale={option4Correct} onChange={e => updateOption4Correct(e.target.value)} placeholder='Is this one of the answers ?'>\r\n\t\t\t\t\t\t\t<option>Yes</option>\r\n\t\t\t\t\t\t\t<option>No</option>\r\n\t\t\t\t\t\t</select>\r\n\t\t\t\t\t</fieldset>\r\n\t\t\t\t\t<button onClick={addQuestion} className=\"question-button\"> Add Question </button>\r\n\t\t\t\t\t<button onClick={handleSubmit}> Done </button>\r\n\t\t\t\t</fieldset>\r\n\t\t\t</form >\r\n\t\t</div>\r\n\t)\r\n\r\n}\r\nexport default function App() {\r\n\t// const questions = [\r\n\t// \t{\r\n\t// \t\tquestionText: 'What is the capital of France?',\r\n\t// \t\tanswerOptions: [\r\n\t// \t\t\t{ answerText: 'New York', isCorrect: false },\r\n\t// \t\t\t{ answerText: 'London', isCorrect: false },\r\n\t// \t\t\t{ answerText: 'Paris', isCorrect: true },\r\n\t// \t\t\t{ answerText: 'Dublin', isCorrect: false },\r\n\t// \t\t],\r\n\t// \t},\r\n\t// \t{\r\n\t// \t\tquestionText: 'Who is CEO of Tesla?',\r\n\t// \t\tanswerOptions: [\r\n\t// \t\t\t{ answerText: 'Jeff Bezos', isCorrect: false },\r\n\t// \t\t\t{ answerText: 'Elon Musk', isCorrect: true },\r\n\t// \t\t\t{ answerText: 'Bill Gates', isCorrect: false },\r\n\t// \t\t\t{ answerText: 'Tony Stark', isCorrect: false },\r\n\t// \t\t],\r\n\t// \t},\r\n\t// \t{\r\n\t// \t\tquestionText: 'The iPhone was created by which company?',\r\n\t// \t\tanswerOptions: [\r\n\t// \t\t\t{ answerText: 'Apple', isCorrect: true },\r\n\t// \t\t\t{ answerText: 'Intel', isCorrect: false },\r\n\t// \t\t\t{ answerText: 'Amazon', isCorrect: false },\r\n\t// \t\t\t{ answerText: 'Microsoft', isCorrect: false },\r\n\t// \t\t],\r\n\t// \t},\r\n\t// \t{\r\n\t// \t\tquestionText: 'How many Harry Potter books are there?',\r\n\t// \t\tanswerOptions: [\r\n\t// \t\t\t{ answerText: '1', isCorrect: false },\r\n\t// \t\t\t{ answerText: '4', isCorrect: false },\r\n\t// \t\t\t{ answerText: '6', isCorrect: false },\r\n\t// \t\t\t{ answerText: '7', isCorrect: true },\r\n\t// \t\t],\r\n\t// \t},\r\n\t// ];\r\n\r\n\tconst [questions, updateQuestions] = useState([]);\r\n\tconst [currentQuestion, setCurrentQuestion] = useState(0);\r\n\tconst [showScore, setShowScore] = useState(false);\r\n\tconst [showQuestions, setShowQuestions] = useState(false);\r\n\tconst [score, setScore] = useState(0);\r\n\r\n\tconst handleAnswerOptionClick = (isCorrect) => {\r\n\t\tif (isCorrect) {\r\n\t\t\tsetScore(score + 1);\r\n\t\t}\r\n\r\n\t\tconst nextQuestion = currentQuestion + 1;\r\n\t\tif (nextQuestion < questions.length) {\r\n\t\t\tsetCurrentQuestion(nextQuestion);\r\n\t\t} else {\r\n\t\t\tsetShowScore(true);\r\n\t\t}\r\n\t};\r\n\treturn (\r\n\t\t<div className='app'>\r\n\t\t\t{showScore ? (\r\n\t\t\t\t<div className='score-section'>\r\n\t\t\t\t\tYou scored {score} out of {questions.length}\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\tshowQuestions ? (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<div className='question-section'>\r\n\t\t\t\t\t\t\t<div className='question-count'>\r\n\t\t\t\t\t\t\t\t<span>Question {currentQuestion + 1}</span>/{questions.length}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className='question-text'>{questions[currentQuestion].questionText}</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='answer-section'>\r\n\t\t\t\t\t\t\t{questions[currentQuestion].answerOptions.map((answerOption) => (\r\n\t\t\t\t\t\t\t\t<button onClick={() => handleAnswerOptionClick(answerOption.isCorrect)}>{answerOption.answerText}</button>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<CreateQuiz updateQuestions={updateQuestions} setShowQuestions={setShowQuestions} questions={questions} />\r\n\t\t\t\t)\r\n\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}